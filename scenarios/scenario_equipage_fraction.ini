[General]
# Basic Simulation Parameters
description = "Two hosts communicating wirelessly"
sim-time-limit = 1800s
repeat = 50

# Scalar and Vector Recording Settings
**.aircraft[*].app[*].packetSent:count.scalar-recording = true
**.aircraft[*].app[*].packetSent:sum(packetBytes).scalar-recording = true
**.aircraft[*].routing.beaconSentCount:count.scalar-recording = true
**.aircraft[*].routing.beaconSentBytes:sum.scalar-recording = true
**.groundStation[*].app[*].packetReceived:count.scalar-recording = true
**.aircraft[*].ipv4.ip.packetDropHopLimitReached:count.scalar-recording = true
**.groundStation[*].app[*].endToEndDelay:vector.vector-recording = true
**.aircraft[*].routing.hopCount:vector.vector-recording = true
**.aircraft[*].routing.greedyForwardingFailed:vector.vector-recording = true
**.aircraft[*].routing.routingFailed:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.queue.queueLength:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.queue.queueingTime:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.queueP2P.queueLength:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.queueP2P.queueingTime:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.macDelaySH:vector.vector-recording = true
**.aircraft[*].wlan[*].mac.macDelayP2P:vector.vector-recording = true

**.vector-recording = false
**.scalar-recording = false
**.statistic-recording = true


# Mobility Model, Ground Station Coordinates, and Scenario Manager Configuration
*.numGroundStations = 1  # Number of ground stations

**.mobility.constraintAreaMinX = 0m
**.mobility.constraintAreaMinY = 0m
**.mobility.constraintAreaMinZ = 0m  # Minimum Z-axis value
**.mobility.constraintAreaMaxX = 1250km  # Adjust as needed
**.mobility.constraintAreaMaxY = 800km  # Adjust as needed
**.mobility.constraintAreaMaxZ = 11km  # Maximum Z-axis value

**.groundStation[*].mobility.typename = "StationaryMobility"
**.groundStation[*].mobility.initFromDisplayString = false
**.groundStation[*].mobility.initialX = 1150km  # Center X coordinate
**.groundStation[*].mobility.initialY = 400km  # Center Y coordinate
**.groundStation[*].mobility.initialZ = 0m  # Height

**.aircraft[*].mobility.typename = "LinearMobility"
**.aircraft[*].mobility.speed = 0.222kmps  # Constant speed
**.aircraft[*].mobility.angle = uniform(0deg, 360deg)  # Uniformly distributed angle

# NIC Configuration
**.hasStatus = true
**.ipv4.arp.typename = "GlobalArp"
**.netmaskRoutes = ""
*.configurator.addStaticRoutes = false
**.configurator.typename = "HostAutoConfigurator"

# TDMA-like MAC Configuration
**.wlan[*].typename = "TdmaInterface"
**.slotDuration= 24ms
**.scheduler.communicationRange = 100km
**.scheduler.maxP2PLinks = 50
**.buildGraphIntervalSlots = 10
**.wlan[*].mac.headerLength = 23B
**.wlan[*].mac.useAck= false
**.wlan[*].mac.queue.packetCapacity = 100
**.wlan[*].bitrate = 150kbps
**.maxTransmissionDuration = 24ms

**.timeToLive = 32

[Config scenario]
network = scenarioRandom_forwarding

# Output File Configuration
output-vector-file = "${resultdir}/simresults/scenario_EquipageFraction/${configname}/${iterationvarsf}#${repetition}.vec"
output-scalar-file = "${resultdir}/simresults/scenario_EquipageFraction/${configname}/${iterationvarsf}#${repetition}.sca"
cmdenv-output-file = "${resultdir}/simresults/scenario_EquipageFraction/${configname}/${iterationvarsf}#${repetition}.log"

*.numAircrafts = ${numAircrafts = 250, 300, 350, 400, 450, 500}  # Number of aircraft nodes reflects the equipage fractions

# Communication Range Settings
**.wlan[0].radio.transmitter.communicationRange = 100km
**.wlan[0].radio.receiver.ignoreInterference = true
**.wlan[*].radio.transmitter.interferenceRange = 0km
**.wlan[*].radio.transmitter.detectionRange = 100km

# Application Layer Configuration for Aircraft
*.aircraft[*].numApps = 1
*.aircraft[*].app[0].typename = "UdpBasicApp"
*.aircraft[*].app[0].destAddresses = "groundStation[0]"
*.aircraft[*].app[0].destPort = 5000
*.aircraft[*].app[0].messageLength = 34B
*.aircraft[*].app[0].sendInterval = 60s  # Set send interval to 60 seconds
*.aircraft[*].app[0].packetName = "Udp_Aircraft"+ string(parentIndex())+ ""
*.aircraft[*].app[0].startTime = uniform(60s, 120s)  # Random uniform start time between 0 and 60 seconds
*.aircraft[*].app[0].stopTime = 1680s

# Application Layer Configuration for Ground Station
*.groundStation[0].numApps = 1
*.groundStation[0].app[0].typename = "UdpSink"
*.groundStation[0].app[0].localPort = 5000

# network visualizer
*.visualizer.*.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.*.networkRouteVisualizer[0].packetFilter = "Udp*"
*.visualizer.*.networkRouteVisualizer[0].lineColor = "red"
*.visualizer.*.networkRouteVisualizer[0].lineWidth = 4
*.visualizer.*.networkRouteVisualizer[0].labelFont = 	", 10px"
*.visualizer.*.networkRouteVisualizer[0].labelColor = "blue"
*.visualizer.*.networkRouteVisualizer[0].lineStyle = "dotted"
*.visualizer.*.networkRouteVisualizer[0].fadeOutMode = "simulationTime"
*.visualizer.*.networkRouteVisualizer[0].fadeOutTime = 1s

*.groundStation[0].wlan[0].radio.displayCommunicationRange = true

### Interfaces
**.configurator.typename = "HostAutoConfigurator"
*.aircraft[*].numEthInterfaces = 1
*.aircraft[*].*.configurator.interfaces = "wlan0 eth0"
*.groundStation[*].*.configurator.interfaces = "eth0"

# Additional Interface and Routing Configuration
*.aircraft[*].routing.typename = "Greedy"
*.aircraft[*].routing.beaconInterval = 5s
*.aircraft[*].routing.groundStationRange = 370.4km
*.aircraft[*].routing.groundstationsTraceFile = "../scenarioRandom_groundstationsA2G.txt"
*.aircraft[*].routing.beaconForwardedFromGpsr = true
*.aircraft[*].routing.forwardingRadiusReduction = 2.5km # This is calculated by multiplying speed x beacon interval x 2 x 2

[Config dijkstra]
extends = scenario
**.routing.typename = "Dspr"
**.routing.outputInterface = "wlan0"
**.routing.a2gOutputInterface = "eth0"
**.routing.groundStationRange = 370.4km

*.nodeManager.destAddrs = "groundStation[0]"
*.nodeManager.routeUpdateInterval = 0.5s # now routes are updates before forwarding each packet
*.nodeManager.usableCommunicationRangeRatio = 0.987 # 100km- 0.222m/s * 2 * 0.5s (reduce communication range for the case of 100km)
*.nodeManager.communicationRange = 100km
*.nodeManager.groundStationRange = 370.4km

[Config greedy-forwarding-1hop]
extends = scenario
*.aircraft[*].routing.useFFT = false
*.aircraft[*].routing.useTwoHopGreedy = false
*.aircraft[*].routing.useRandom = false

[Config greedy-forwarding-2hop]
extends = scenario
*.aircraft[*].routing.useFFT = false
*.aircraft[*].routing.useTwoHopGreedy = true
*.aircraft[*].routing.useRandom = false

[Config greedy-forwarding-fft-m-4]
extends = scenario
*.aircraft[*].routing.useFFT = true
*.aircraft[*].routing.useTwoHopGreedy = true
*.aircraft[*].routing.useRandom = false

[Config greedy-forwarding-efft-m-4]
extends = scenario
*.aircraft[*].routing.useEFFT = true
*.aircraft[*].routing.useEnforceEFFT = false

[Config greedy-forwarding-random-m-4]
extends = scenario
*.aircraft[*].routing.useFFT = false
*.aircraft[*].routing.useTwoHopGreedy = true
*.aircraft[*].routing.useRandom = true

[Config greedy-forwarding-fft-m-6]
extends = scenario
*.aircraft[*].routing.useFFT = true
*.aircraft[*].routing.useTwoHopGreedy = true
*.aircraft[*].routing.useRandom = false
*.aircraft[*].routing.numberOfSelectedNeighbors = 6

[Config greedy-forwarding-efft-m-6]
extends = scenario
*.aircraft[*].routing.useEFFT = true
*.aircraft[*].routing.useEnforceEFFT = false
*.aircraft[*].routing.numberOfSelectedNeighbors = 6

[Config greedy-forwarding-random-m-6]
extends = scenario
*.aircraft[*].routing.useFFT = false
*.aircraft[*].routing.useTwoHopGreedy = true
*.aircraft[*].routing.useRandom = true
*.aircraft[*].routing.numberOfSelectedNeighbors = 6



